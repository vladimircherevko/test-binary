{"version":3,"sources":["store/reducers.js","store/index.js","store/types.js","store/request.js","store/actions.js","components/RecipeListItem.js","components/RecipeList.js","components/NavBtnBig.js","components/Navbar.js","components/Header.js","pages/MainPage.js","components/EditForm.js","pages/CreatePage.js","components/RecipeCard.js","components/HistoryCard.js","pages/RecipePage.js","pages/HistoryPage.js","pages/EditPage.js","components/Routes.js","App.js","serviceWorker.js","index.js"],"names":["sorter","arr","sort","a","b","Date","date","rootReducer","combineReducers","list","state","action","type","payload","map","item","_id","error","createStore","applyMiddleware","thunk","request","url","method","body","fetch","resp","json","data","ok","Error","message","setError","warning","RecipeListItem","image","title","clickHandle","className","onClick","src","alt","RecipeList","useState","defaultImg","setDefaultImg","history","useHistory","useEffect","key","push","NavBtnBig","letter","to","Navbar","link","Header","MainPage","dispatch","useDispatch","useSelector","Array","isArray","window","M","toast","html","displayLength","classes","length","EditForm","text","parts","changeText","changeFile","submit","inputRef","btnRef","textareaAutoResize","document","querySelector","scrollTo","onSubmit","encType","id","name","onChange","value","maxLength","htmlFor","accept","ref","CreatePage","form","setForm","useRef","cb","useCallback","current","classList","remove","event","target","toUpperCase","preventDefault","add","trim","info","console","log","addRecipe","FormData","input","reader","FileReader","onload","dataURL","result","onloadend","files","readAsDataURL","RecipeCard","toLocaleString","HistoryCard","RecipePage","useParams","find","HistoryPage","EditPage","updateTextFields","toLocaleDateString","changeRecipe","Routes","path","exact","component","App","store","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0ca20cab.chunk.js","sourcesContent":["import {\r\n  GET_LIST,\r\n  CHANGE_LIST,\r\n  CHANGE_RECIPE,\r\n  SET_ERROR,\r\n  CLEAR_ERROR\r\n} from \"./types\";\r\n\r\nconst sorter = arr => arr.sort((a, b) => new Date(b.date) - new Date(a.date));\r\n\r\nexport const listReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case GET_LIST:\r\n      return [...sorter(action.payload)];\r\n    case CHANGE_RECIPE:\r\n      return sorter(\r\n        state.map(item =>\r\n          item._id === action.payload._id ? action.payload : item\r\n        )\r\n      );\r\n    case CHANGE_LIST:\r\n      return [action.payload, ...state];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const errorReducer = (state = \"\", action) => {\r\n  switch (action.type) {\r\n    case SET_ERROR:\r\n      return action.payload;\r\n    case CLEAR_ERROR:\r\n      return \"\";\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { listReducer, errorReducer } from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  list: listReducer,\r\n  error: errorReducer\r\n});\r\n\r\nexport default createStore(rootReducer, applyMiddleware(thunk));\r\n","export const GET_LIST = \"GET_LIST\";\r\nexport const CHANGE_LIST = \"CHANGE_LIST\";\r\nexport const CHANGE_RECIPE = \"CHANGE_RECIPE\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n","export const request = async (url, method = \"GET\", body = null) => {\r\n  try {\r\n    const resp = await fetch(url, { method, body });\r\n    const data = await resp.json();\r\n\r\n    if (!resp.ok) throw new Error(data.message || \"Ошибка http запроса\");\r\n    return data;\r\n  } catch (e) {\r\n    if (!e.message) e.message = \"Ошибка http запроса\";\r\n    throw e;\r\n  }\r\n};\r\n","import {\r\n  GET_LIST,\r\n  CHANGE_LIST,\r\n  CHANGE_RECIPE,\r\n  SET_ERROR,\r\n  CLEAR_ERROR\r\n} from \"./types\";\r\nimport { request } from \"./request\";\r\n\r\nexport const getList = () => async dispatch => {\r\n  try {\r\n    const data = await request(\"/api/list\");\r\n    if (Array.isArray(data)) {\r\n      dispatch({\r\n        type: GET_LIST,\r\n        payload: data\r\n      });\r\n    } else {\r\n      throw (new Error().message =\r\n        data.message ||\r\n        \"Неопределенный ответ сервера при запросе списка рецептов\");\r\n    }\r\n  } catch (err) {\r\n    dispatch(setError(err.message));\r\n  }\r\n};\r\n\r\nexport const addRecipe = (info, cb) => async dispatch => {\r\n  try {\r\n    const data = await request(\"/api/create\", \"POST\", info, {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    });\r\n\r\n    if (data._id) {\r\n      dispatch({\r\n        type: CHANGE_LIST,\r\n        payload: data\r\n      });\r\n      cb();\r\n    } else {\r\n      throw (new Error().message =\r\n        data.message || \"Неопределенный ответ сервера при добавлении рецепта\");\r\n    }\r\n  } catch (err) {\r\n    if (err.error) console.log(err.error);\r\n    dispatch(setError(err.message));\r\n  }\r\n};\r\n\r\nexport const changeRecipe = (info, cb) => async dispatch => {\r\n  try {\r\n    const data = await request(\"/api/change\", \"POST\", info, {\r\n      \"Content-Type\": \"multipart/form-data\"\r\n    });\r\n    if (data._id) {\r\n      dispatch({\r\n        type: CHANGE_RECIPE,\r\n        payload: data\r\n      });\r\n      cb();\r\n    } else {\r\n      throw (new Error().message =\r\n        data.message || \"Неопределенный ответ сервера при изменении рецепта\");\r\n    }\r\n  } catch (err) {\r\n    dispatch(setError(err.message));\r\n  }\r\n};\r\n\r\nexport const clearError = () => ({\r\n  type: CLEAR_ERROR\r\n});\r\n\r\nexport const setError = warning => ({\r\n  type: SET_ERROR,\r\n  payload: \"\" + warning || \"Неопределенная ошибка\"\r\n});\r\n","import React from \"react\";\r\n\r\nexport const RecipeListItem = ({ image, title, clickHandle }) => {\r\n  return (\r\n    <div className=\"col s12 m6 l4\">\r\n      <div className=\"card hoverable\" onClick={clickHandle}>\r\n        <div className=\"card-image img-card\">\r\n          <img src={image} alt=\"\" />\r\n        </div>\r\n        <div className=\"card-content\">\r\n          <span className=\"truncate deep-orange-text text-darken-4 bold-text\">\r\n            {title}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { RecipeListItem } from \"./RecipeListItem\";\r\n\r\nexport const RecipeList = ({ list }) => {\r\n  const [defaultImg, setDefaultImg] = useState(\"logo-color.png\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setDefaultImg(null);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      {list.map(item => (\r\n        <RecipeListItem\r\n          key={item._id}\r\n          clickHandle={() => history.push(`/recipe/${item._id}`)}\r\n          image={defaultImg || item.image}\r\n          title={item.title}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavBtnBig = ({ action, letter, title }) => (\r\n  <Link\r\n    className=\"waves-effect waves-light btn-large\"\r\n    to={action}\r\n    title={title}\r\n  >\r\n    {letter}\r\n  </Link>\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport const Navbar = ({ title, link, action }) => {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className=\"navbar-fixed\" onClick={() => history.push(link)}>\r\n      <div className=\" blue-grey darken-1 white-text fixed\">{title}</div>\r\n      <nav className=\" blue-grey darken-2  hoverable fixnav\">\r\n        <div className=\"container\">\r\n          <div className=\"nav-wrapper\">\r\n            <div className=\"brand-logo\">\r\n              <img src=\"/cook-logo-white.png\" className=\"logo-img\" alt=\"\" />\r\n              <span className=\"hide-on-med-and-down logo-text\">\r\n                Книга рецептов\r\n              </span>\r\n            </div>\r\n            <div className=\"right\">\r\n              <span>{action}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Header = ({ title }) => {\r\n  return (\r\n    <div className=\"row  grey lighten-4 py\">\r\n      <div className=\"col s12 cyan lighten-2\">\r\n        <h4 className=\"white-text center-align\">{title}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getList, clearError } from \"../store/actions\";\r\nimport { RecipeList } from \"../components/RecipeList\";\r\nimport { NavBtnBig } from \"../components/NavBtnBig\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport { Header } from \"../components/Header\";\r\n\r\nexport const MainPage = () => {\r\n  const dispatch = useDispatch();\r\n  const { list, error } = useSelector(state => state);\r\n\r\n  useEffect(() => {\r\n    dispatch(getList());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (window.M && error) {\r\n      window.M.toast({ html: error, displayLength: 10000, classes: \"rounded\" });\r\n      dispatch(clearError());\r\n    }\r\n  }, [error, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        title=\"Главная страница\"\r\n        link=\"/create\"\r\n        action=\"&#9998;_&nbsp; Новый рецепт\"\r\n      />\r\n      <Header title={`Самых свежих рецептов ${list.length}`} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4 className=\"center-align cyan-text bold-text\">Свежие рецепты</h4>\r\n          <RecipeList list={list} />\r\n          <div className=\"col s12 center-align my\">\r\n            <NavBtnBig\r\n              title=\"Добавить самый-самый свежий рецепт\"\r\n              action=\"/create\"\r\n              letter=\"Добавить рецептик\"\r\n            />\r\n          </div>\r\n          {(!list.length && (\r\n            <div className=\"col s12 center-align\">\r\n              <img src=\"logo-color.png\" alt=\"\" className=\"img-btn\" />\r\n            </div>\r\n          )) ||\r\n            null}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport const EditForm = ({\r\n  title,\r\n  text,\r\n  parts,\r\n  changeText,\r\n  changeFile,\r\n  submit,\r\n  image,\r\n  inputRef,\r\n  btnRef\r\n}) => {\r\n  useEffect(() => {\r\n    window.M.textareaAutoResize(document.querySelector(\"#parts\"));\r\n    window.M.textareaAutoResize(document.querySelector(\"#text\"));\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <form onSubmit={submit} encType=\"multipart/form-data\">\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m6\">\r\n          <div className=\"input-field\">\r\n            <input\r\n              id=\"title\"\r\n              type=\"text\"\r\n              name=\"title\"\r\n              onChange={changeText}\r\n              value={title}\r\n              maxLength=\"30\"\r\n            />\r\n            <label htmlFor=\"title\">Название *</label>\r\n          </div>\r\n          <div className=\"input-field\">\r\n            <textarea\r\n              id=\"parts\"\r\n              className=\"materialize-textarea\"\r\n              name=\"parts\"\r\n              onChange={changeText}\r\n              value={parts}\r\n            ></textarea>\r\n            <label htmlFor=\"parts\">Ингридиенты *</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"col s10 m5 offset-s1 offset-m1\">\r\n          <label htmlFor=\"image\">\r\n            <div className=\"img-block hoverable\">\r\n              <img src={image} alt=\"\" />\r\n            </div>\r\n            <span className=\"btn white-text img-btn\">\r\n              Выбрать свою картинку\r\n            </span>\r\n          </label>\r\n          <input\r\n            id=\"image\"\r\n            type=\"file\"\r\n            accept=\"image/png,image/jpg,image/jpeg\"\r\n            name=\"image\"\r\n            onChange={changeFile}\r\n            className=\"hide\"\r\n            ref={inputRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"input-field col s12\">\r\n          <textarea\r\n            id=\"text\"\r\n            className=\"materialize-textarea\"\r\n            name=\"text\"\r\n            onChange={changeText}\r\n            value={text}\r\n          ></textarea>\r\n          <label htmlFor=\"text\">Описание *</label>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col s12\">\r\n          <button\r\n            className=\"btn waves-effect waves-light grey darken-1 white-text\"\r\n            type=\"submit\"\r\n            ref={btnRef}\r\n          >\r\n            Сохранить\r\n          </button>\r\n          <p className=\"cyan-text bold-text\">\r\n            * Текстовые поля обязательны для заполнения\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useState, useCallback, useRef, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { addRecipe, setError, clearError } from \"../store/actions\";\r\nimport { EditForm } from \"../components/EditForm\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Navbar } from \"../components/Navbar\";\r\n\r\nexport const CreatePage = () => {\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    image: \"logo-color.png\",\r\n    parts: \"\"\r\n  });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const inputRef = useRef();\r\n  const btnRef = useRef();\r\n  const error = useSelector(state => state.error);\r\n\r\n  const cb = useCallback(() => {\r\n    history.push(\"/\");\r\n  }, [history]);\r\n\r\n  useEffect(() => {\r\n    if (window.M && error) {\r\n      window.M.toast({ html: error, displayLength: 10000, classes: \"rounded\" });\r\n      dispatch(clearError());\r\n      btnRef.current.classList.remove(\"disabled\");\r\n    }\r\n  }, [error, dispatch]);\r\n\r\n  const changeTextHandle = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]:\r\n        event.target.name === \"title\"\r\n          ? event.target.value.toUpperCase()\r\n          : event.target.value\r\n    });\r\n  };\r\n\r\n  const changeFileHandle = () => {\r\n    const input = inputRef.current;\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function() {\r\n      const dataURL = reader.result;\r\n      setForm({ ...form, image: dataURL });\r\n    };\r\n    reader.onloadend = function() {\r\n      if (reader.error) dispatch(setError(reader.error.message));\r\n    };\r\n    if (input.files[0]) reader.readAsDataURL(input.files[0]);\r\n  };\r\n\r\n  const submitHandle = event => {\r\n    event.preventDefault();\r\n    btnRef.current.classList.add(\"disabled\");\r\n\r\n    if (!form.title.trim()) dispatch(setError(\"Не заполнено название рецепта\"));\r\n    else if (!form.text.trim())\r\n      dispatch(setError(\"Не заполнено описание рецепта\"));\r\n    else if (!form.parts.trim())\r\n      dispatch(setError(\"Не заполнены ингридиенты рецепта\"));\r\n    else dispatch(addRecipe(new FormData(event.target), cb));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        title=\"Создание рецепта\"\r\n        link=\"/\"\r\n        action=\"&#10148;&nbsp;&nbsp;К списку рецептов\"\r\n      />\r\n      <Header title=\"Самый свежий рецептик\" />\r\n      <div className=\"container\">\r\n        <EditForm\r\n          image={form.image}\r\n          parts={form.parts}\r\n          title={form.title}\r\n          text={form.text}\r\n          changeText={changeTextHandle}\r\n          submit={submitHandle}\r\n          changeFile={changeFileHandle}\r\n          inputRef={inputRef}\r\n          btnRef={btnRef}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const RecipeCard = ({ title, text, date, parts, image, action }) => (\r\n  <>\r\n    <h4 className=\"header center-align cyan-text bold-text\">{title}</h4>\r\n    <div className=\"card horizontal\">\r\n      <div className=\"row\">\r\n        <div className=\"card-image col s5\">\r\n          <div className=\"px py\">\r\n            <img src={image} alt=\"\" />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"card-stacked col s6 offset-m1\">\r\n          <div className=\"card-content\">\r\n            <h5 className=\"deep-orange-text text-darken-4 bold-text\">\r\n              Ингридиенты:\r\n            </h5>\r\n            <pre>{parts}</pre>\r\n          </div>\r\n        </div>\r\n        <div className=\"card-content col s12\">\r\n          <h5 className=\"deep-orange-text text-darken-4 bold-text\">\r\n            Описание:\r\n          </h5>\r\n          <p>{text}</p>\r\n          <br />\r\n          <h6>\r\n            Дата сохранения рецепта:\r\n            <strong> {new Date(date).toLocaleString()}</strong>\r\n          </h6>\r\n        </div>\r\n        {action && (\r\n          <div className=\"card-action col s12\">\r\n            <Link to={action} className=\"btn grey darken-1 white-text\">\r\n              Изменить\r\n            </Link>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  </>\r\n);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const HistoryCard = ({ history, action }) => (\r\n  <div className=\"row\">\r\n    <div className=\"col s12 \">\r\n      <div className=\"card blue-grey darken-1\">\r\n        <div className=\"card-content white-text\">\r\n          <span className=\"card-title\">\r\n            История рецепта имеет {history.length} изменений\r\n          </span>\r\n        </div>\r\n        {history.length ? (\r\n          <div className=\"card-action\">\r\n            <Link to={action} className=\"btn yellow lighten-1 black-text\">\r\n              Просмотреть архив\r\n            </Link>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RecipeCard } from \"../components/RecipeCard\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport { HistoryCard } from \"../components/HistoryCard\";\r\n\r\nexport const RecipePage = () => {\r\n  const id = useParams().id;\r\n\r\n  const { title, text, date, history, parts, image } = useSelector(state =>\r\n    state.list.find(item => item._id === id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        title=\"Страница рецепта\"\r\n        link=\"/\"\r\n        action=\"&#10148;&nbsp;&nbsp;К списку рецептов\"\r\n      />\r\n      <Header title=\"Еще горячий рецептик!\" />\r\n      <div className=\"container\">\r\n        <RecipeCard\r\n          title={title}\r\n          text={text}\r\n          date={date}\r\n          parts={parts}\r\n          image={image}\r\n          action={`/edit/${id}`}\r\n        />\r\n        <HistoryCard history={history} action={`/history/${id}/#`} />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { RecipeCard } from \"../components/RecipeCard\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Navbar } from \"../components/Navbar\";\r\n\r\nexport const HistoryPage = () => {\r\n  const id = useParams().id;\r\n  const { history } = useSelector(state =>\r\n    state.list.find(item => item._id === id)\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        title=\"Архив\"\r\n        link={`/recipe/${id}`}\r\n        action=\"&#10148;&nbsp;&nbsp;К рецепту\"\r\n      />\r\n      <Header title=\"Уже остывшие рецепты\" />\r\n      <div className=\"container\">\r\n        {[...history]\r\n          .sort((a, b) => new Date(b.date) - new Date(a.date))\r\n          .map(item => (\r\n            <RecipeCard\r\n              key={item._id}\r\n              title={item.title}\r\n              text={item.text}\r\n              date={item.date}\r\n              parts={item.parts}\r\n              image={item.image}\r\n              action={null}\r\n            />\r\n          ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { changeRecipe, setError, clearError } from \"../store/actions\";\r\nimport { EditForm } from \"../components/EditForm\";\r\nimport { Header } from \"../components/Header\";\r\nimport { Navbar } from \"../components/Navbar\";\r\n\r\nexport const EditPage = () => {\r\n  const id = useParams().id;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const inputRef = useRef();\r\n  const btnRef = useRef();\r\n  const error = useSelector(state => state.error);\r\n\r\n  const cb = useCallback(() => {\r\n    history.push(`/recipe/${id}`);\r\n  }, [history, id]);\r\n\r\n  const { title, text, parts, date, image } = useSelector(state =>\r\n    state.list.find(item => item._id === id)\r\n  );\r\n  const [form, setForm] = useState({ title, text, parts, image });\r\n\r\n  useEffect(() => {\r\n    window.M.updateTextFields();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (window.M && error) {\r\n      window.M.toast({ html: error, displayLength: 10000, classes: \"rounded\" });\r\n      dispatch(clearError());\r\n      btnRef.current.classList.remove(\"disabled\");\r\n    }\r\n  }, [error, dispatch]);\r\n\r\n  const changeTextHandle = event => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]:\r\n        event.target.name === \"title\"\r\n          ? event.target.value.toUpperCase()\r\n          : event.target.value\r\n    });\r\n  };\r\n\r\n  const createHandle = event => {\r\n    event.preventDefault();\r\n    btnRef.current.classList.add(\"disabled\");\r\n\r\n    if (!form.title.trim()) dispatch(setError(\"Не заполнено название рецепта\"));\r\n    else if (!form.text.trim())\r\n      dispatch(setError(\"Не заполнено описание рецепта\"));\r\n    else if (!form.parts.trim())\r\n      dispatch(setError(\"Не заполнены ингридиенты рецепта\"));\r\n    else if (\r\n      form.title !== title ||\r\n      form.text !== text ||\r\n      form.parts !== parts ||\r\n      form.image !== image\r\n    )\r\n      dispatch(changeRecipe(new FormData(event.target), cb));\r\n    else dispatch(setError(\"В рецепте нет изменений\"));\r\n  };\r\n\r\n  const changeFileHandle = () => {\r\n    const input = inputRef.current;\r\n\r\n    const reader = new FileReader();\r\n    reader.onload = function() {\r\n      const dataURL = reader.result;\r\n      setForm({ ...form, image: dataURL });\r\n    };\r\n    reader.onloadend = function() {\r\n      if (reader.error) dispatch(setError(reader.error.message));\r\n    };\r\n    if (input.files[0]) reader.readAsDataURL(input.files[0]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        title=\"Изменение рецепта\"\r\n        link={`/recipe/${id}`}\r\n        action=\"&#10148;&nbsp;&nbsp;К рецепту\"\r\n      />\r\n      <Header\r\n        title={`Дата последнего изменения ${new Date(\r\n          date\r\n        ).toLocaleDateString()}`}\r\n      />\r\n      <div className=\"container\">\r\n        <EditForm\r\n          image={form.image}\r\n          parts={form.parts}\r\n          title={form.title}\r\n          text={form.text}\r\n          changeText={changeTextHandle}\r\n          submit={createHandle}\r\n          changeFile={changeFileHandle}\r\n          inputRef={inputRef}\r\n          btnRef={btnRef}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { MainPage } from \"../pages/MainPage\";\r\nimport { CreatePage } from \"../pages/CreatePage\";\r\nimport { RecipePage } from \"../pages/RecipePage\";\r\nimport { HistoryPage } from \"../pages/HistoryPage\";\r\nimport { EditPage } from \"../pages/EditPage\";\r\n\r\nexport const Routes = () => (\r\n  <Switch>\r\n    <Route path=\"/\" exact component={MainPage} />\r\n    <Route path=\"/create\" component={CreatePage} />\r\n    <Route path=\"/recipe/:id\" component={RecipePage} />\r\n    <Route path=\"/history/:id\" component={HistoryPage} />\r\n    <Route path=\"/edit/:id\" component={EditPage} />\r\n    <Redirect to=\"/\" />\r\n  </Switch>\r\n);\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport \"materialize-css\";\n\nimport store from \"./store\";\nimport { Routes } from \"./components/Routes\";\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <Routes />\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}